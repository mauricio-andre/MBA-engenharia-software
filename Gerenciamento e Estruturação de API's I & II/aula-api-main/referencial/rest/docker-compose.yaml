services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/src
    working_dir: /src
    ports:
      - "8000:8000"
    environment:
      - CONEXAO=${CONEXAO}
      - CHAVE_SECRETA=${CHAVE_SECRETA}
      - ALGORITMO=${ALGORITMO}
      - TEMPO_DE_EXPIRACAO_TOKEN_DE_ACESSO=${TEMPO_DE_EXPIRACAO_TOKEN_DE_ACESSO}
      - CHAVE_API=${CHAVE_API}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - rest_api

  postgres:
    image: postgres:13-alpine
    container_name: db
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: always
    networks:
      - rest_api

  web:
    image: nginx:latest
    container_name: frontend
    ports:
      - "8080:80"
    volumes:
      - ./frontend/html:/usr/share/nginx/html
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    networks:
      - rest_api

volumes:
  postgres_volume:

networks:
  rest_api:
